# This file is part of the sample that  you can use to build your devOps automation.
# See the README markdown file for further details

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'GitHub environment where build variables and secrets are read from'
        required: true
        type: string

  workflow_call:
    inputs:
      environment:
        description: 'GitHub environment where build variables and secrets are read from'
        required: true
        type: string

      resource_group:
        description: 'Overrides the AZURE_RESOURCE_GROUP variable if provided. (ex. deploy each pr in its own resource group)'
        required: false
        type: string
        default: ''

      azure_environment_name:
        description: 'azd environment name, by default same as GitHub environment'
        required: false
        type: string
        default: ''

permissions:
  id-token: write
  contents: read

jobs:
  build:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    # env:
    #   AZURE_ENV_NAME: ${{ inputs.azure_environment_name == '' &&  inputs.environment || inputs.azure_environment_name }}
    #   AZURE_RESOUCE_GROUP: "${{ inputs.resource_group == '' && vars.AZURE_RESOURCE_GROUP || inputs.resource_group }}"
    #   AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    #   AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
    #   AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
    #   AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
    #   PRINCIPAL_TYPE: ${{ vars.PRINCIPAL_TYPE }}

    steps:
      - name: Chekout
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install dependencies
        run: dotnet restore ./src

      - name: Build
        run: dotnet build ./src --configuration Release --no-restore

      - name: Test
        run: dotnet test ./src --no-restore --verbosity normal

      - name: Create build artifacts
        shell: pwsh
        run: |
          mkdir buildartifacts
          Copy-Item ./azure.yaml ./buildartifacts/azure.yaml
          Copy-Item -R ./infra/ ./buildartifacts/infra/
          Copy-Item -R ./src ./buildartifacts/src -Filter *.csproj
          $packageOutput= azd package --output json | ConvertFrom-Json -AsHashtable
          write-host $packageOutput.services['api'].packagePath

      - name: publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: path/to/artifact/ # or path/to/artifact

      # - name: Log in with Azure (Federated Credentials)
      #   if: ${{ env.AZURE_CLIENT_ID != '' }}
      #   run: |
      #     azd auth login `
      #       --client-id "$Env:AZURE_CLIENT_ID" `
      #       --federated-credential-provider "github" `
      #       --tenant-id "$Env:AZURE_TENANT_ID" `
      #       --debug
      #   shell: pwsh

      # - name: Azure Dev Provision
      #   run: azd provision --no-prompt

      # - name: Azure Dev Deploy
      #   run: azd deploy --no-prompt
